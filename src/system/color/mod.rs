use color_utilities::utils::color::ARGB;

pub mod provider;
pub use provider::*;

pub struct Color;

impl Color {
	pub fn of(role: &ColorRole, context: &ColorContext) -> ARGB {
		match role {
			ColorRole::Primary => context.scheme().primary(),
			ColorRole::PrimaryContainer => context.scheme().primary_container(),
			ColorRole::Secondary => context.scheme().secondary(),
			ColorRole::SecondaryContainer => context.scheme().secondary_container(),
			ColorRole::Tertiary => context.scheme().tertiary(),
			ColorRole::TertiaryContainer => context.scheme().tertiary_container(),
			ColorRole::Surface => context.scheme().surface(),
			ColorRole::SurfaceVariant => context.scheme().surface_variant(),
			ColorRole::Background => context.scheme().background(),
			ColorRole::Error => context.scheme().error(),
			ColorRole::ErrorContainer => context.scheme().error_container(),
			ColorRole::OnPrimary => context.scheme().on_primary(),
			ColorRole::OnPrimaryContainer => context.scheme().on_primary_container(),
			ColorRole::OnSecondary => context.scheme().on_secondary(),
			ColorRole::OnSecondaryContainer => context.scheme().on_secondary_container(),
			ColorRole::OnTertiary => context.scheme().on_tertiary(),
			ColorRole::OnTertiaryContainer => context.scheme().on_tertiary_container(),
			ColorRole::OnSurface => context.scheme().on_surface(),
			ColorRole::OnSurfaceVariant => context.scheme().on_surface_variant(),
			ColorRole::OnError => context.scheme().on_error(),
			ColorRole::OnErrorContainer => context.scheme().on_error_container(),
			ColorRole::OnBackground => context.scheme().on_background(),
			ColorRole::Outline => context.scheme().outline(),
			ColorRole::OutlineVariant => context.scheme().outline_variant(),
			ColorRole::Shadow => context.scheme().shadow(),
			//NOTE: surface tint dervies to primary
			//https://m3.material.io/styles/color/the-color-system/tokens#7fd4440e-986d-443f-8b3a-4933bff16646
			ColorRole::SurfaceTint => context.scheme().primary(),
			ColorRole::InverseSurface => context.scheme().inverse_surface(),
			ColorRole::InversePrimary => context.scheme().inverse_primary(),
			ColorRole::Scrim => context.scheme().scrim(),
		}
	}
}

#[derive(Clone, Debug, Default, Eq, PartialEq)]
pub enum ColorRole {
	Primary,
	PrimaryContainer,
	Secondary,
	SecondaryContainer,
	Tertiary,
	TertiaryContainer,
	#[default]
	Surface,
	SurfaceVariant,
	Background,
	Error,
	ErrorContainer,
	OnPrimary,
	OnPrimaryContainer,
	OnSecondary,
	OnSecondaryContainer,
	OnTertiary,
	OnTertiaryContainer,
	OnSurface,
	OnSurfaceVariant,
	OnError,
	OnErrorContainer,
	OnBackground,
	Outline,
	OutlineVariant,
	Shadow,
	SurfaceTint,
	InverseSurface,
	InversePrimary,
	Scrim,
}

//crate::display!(Roles);
/*
#[derive(Debug, Eq, Hash, PartialEq)]
pub enum Roles {
	Background,
	Black,
	Error,
	Error0,
	Error10,
	Error100,
	Error20,
	Error30,
	Error40,
	Error50,
	Error60,
	Error70,
	Error80,
	Error90,
	Error95,
	Error99,
	ErrorContainer,
	InverseOnSurface,
	InversePrimary,
	InverseSurface,
	Neutral0,
	Neutral10,
	Neutral100,
	Neutral20,
	Neutral30,
	Neutral40,
	Neutral50,
	Neutral60,
	Neutral70,
	Neutral80,
	Neutral90,
	Neutral95,
	Neutral99,
	NeutralVariant0,
	NeutralVariant10,
	NeutralVariant100,
	NeutralVariant20,
	NeutralVariant30,
	NeutralVariant40,
	NeutralVariant50,
	NeutralVariant60,
	NeutralVariant70,
	NeutralVariant80,
	NeutralVariant90,
	NeutralVariant95,
	NeutralVariant99,
	OnBackground,
	OnError,
	OnErrorContainer,
	OnPrimary,
	OnPrimaryContainer,
	OnSecondary,
	OnSecondaryContainer,
	OnSurface,
	OnSurfaceVariant,
	OnTertiary,
	OnTertiaryContainer,
	Outline, //TODO: move role
	Primary,
	Primary0,
	Primary10,
	Primary100,
	Primary20,
	Primary30,
	Primary40,
	Primary50,
	Primary60,
	Primary70,
	Primary80,
	Primary90,
	Primary95,
	Primary99,
	PrimaryContainer,
	Secondary,
	Secondary0,
	Secondary10,
	Secondary100,
	Secondary20,
	Secondary30,
	Secondary40,
	Secondary50,
	Secondary60,
	Secondary70,
	Secondary80,
	Secondary90,
	Secondary95,
	Secondary99,
	SecondaryContainer,
	Shadow,
	Surface,
	SurfaceTint,
	SurfaceVariant,
	Tertiary,
	Tertiary0,
	Tertiary10,
	Tertiary100,
	Tertiary20,
	Tertiary30,
	Tertiary40,
	Tertiary50,
	Tertiary60,
	Tertiary70,
	Tertiary80,
	Tertiary90,
	Tertiary95,
	Tertiary99,
	TertiaryContainer,
	White,
}*/
